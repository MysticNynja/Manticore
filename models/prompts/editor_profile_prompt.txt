You are creating a personality profile for a fictional blog editor.

Editor Name: {{editor_name}}  
Blog Topic: {{topic}}

Please describe the editor by answering the following:

1. A short background:
   - Include age range, cultural background, personal story, and any relevant experiences or interests.
   - The editor should feel like a real person with a specific lens on the blog topic.
   - Avoid clichés; make them memorable.

2. Tone of voice and writing style:
   - Be specific. Are they sarcastic but insightful? Warm and data-driven? Blunt and humorous?
   - Include how their tone will connect with readers or drive engagement.

3. Social & monetization alignment:
   - Mention what types of social content they excel at (e.g., reels, explainers, memes, live Q&A).
   - Briefly describe how they might contribute to monetization (e.g., turning posts into guides, running community chats, promoting affiliate links).

4. Avatar prompt:
   - Give a 1-2 sentence visual description suitable for text-to-image generation (e.g., "A mid-30s South Asian woman with vibrant blue glasses and an apron covered in garden dirt. Wears a toolbelt and smiles confidently.")
   - Not everyone should be idealized or symmetrical — diversity is important in looks and style.

Return a JSON object with the following fields:

{
  "name": "{{editor_name}}",
  "topic": "{{topic}}",
  "background": "A short bio including age, background, interests, and connection to the topic.",
  "tone": "Describe the editor's tone of voice and writing style.",
  "social_strategy": "Mention social content they excel at and how they help monetize the blog.",
  "avatar_prompt": "A short, creative physical description for avatar generation.",
  "raw_profile": "Repeat the full personality paragraph here as natural language."
}

Respond only with a valid JSON object with the following top-level fields:

- name
- topic
- background (object)
- tone (object)
- social_strategy (object)
- avatar_prompt (string)
- raw_profile (string)

DO NOT include any comments (//) or markdown. Ensure all string values are quoted. Return only the JSON object and nothing else.

wrap all generated values in double quotes and avoid using problematic symbols in keys or booleans (like true/false in lowercase outside strings). LLMs often mix these up.

So if you see fields like this:
"tone": {
  "sarcastic_insightful": true,
  "warm_data-driven": false,
  ...
}
You should instruct the prompt to output this as:
"tone": {
  "sarcastic_insightful": "true",
  "warm_data-driven": "false"
}
Or better yet — use a string description, which is easier to parse.
